[pytest]
# Test configuration for Infrastructure Management System
# Ensures all tests run with network isolation

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    networkisolation: mark test as using network isolation
    timeout: mark test with timeout
    slow: mark test as slow running
    integration: mark test as integration test
    unit: mark test as unit test
    test_interface: mark test as testing interface functionality
    test_integration: mark test as integration test (alias)
    test_scan_button_functionality: mark test as testing scan button functionality
    test_recent_scans_display: mark test as testing recent scans display
    test_input_validation: mark test as testing input validation
    test_database_integration: mark test as testing database integration

# Logging
# Reduce console noise: disable live per-test logging; only show logs for failures
log_cli = false
log_level = WARNING
log_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_date_format = %Y-%m-%d %H:%M:%S

# Optionally write full logs to a file for debugging without cluttering console
log_file = .pytest-log.txt
log_file_level = INFO
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage
addopts = 
    --strict-markers
    --disable-warnings
    --tb=short
    --maxfail=5
    -q

# Disable network access warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*urllib3.*:UserWarning
    ignore:.*requests.*:UserWarning
    ignore:.*The engine provided as bind produced a connection that is already in a transaction.*:sqlalchemy.exc.SAWarning

# Environment
env =
    PYTHONPATH = .
    TESTING = 1
    PYTEST_CURRENT_TEST = 1 